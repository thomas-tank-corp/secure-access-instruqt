#!/bin/sh


until [ -f /opt/instruqt/bootstrap/host-bootstrap-completed ]; do
    echo "Waiting for instruqt bootstrap to complete"
    sleep 1
done

source /etc/profile.d/instruqt-env.sh

apt-get update && sudo apt-get install -y gnupg software-properties-common

apt-get install wget

wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
apt update && apt install terraform
apt install boundary


#Configure Guacamole (https://docs.instruqt.com/sandboxes/hosts/run-a-windows-vm)
cat <<'EOF' > /config/guacamole/user-mapping.xml
<user-mapping>
    <authorize
        username="guac_user"
        password="guac_password">
        <connection name="srv01">
            <protocol>rdp</protocol>
            <!-- hostname as defined in instruqt config.yml -->
            <param name="hostname">windows</param>
            <param name="port">3389</param>
            <!-- domain/username/password must be valid for the target host -->
            <param name="domain"></param>
            <param name="username">instruqt</param>
            <param name="password">Passw0rd!</param>
            <param name="ignore-cert">true</param>
        </connection>
    </authorize>
</user-mapping>
EOF


# install and Configure coder server

curl -fsSL https://code-server.dev/install.sh | sh

cat << EOF > /etc/systemd/system/code-server.service
[Unit]
Description=Code Server
After=network.target
StartLimitIntervalSec=0

[Service]
Type=simple
Restart=always
RestartSec=1
User=root
ExecStart=/usr/bin/code-server --host 0.0.0.0 --port 8443 --cert --auth none /root

[Install]
WantedBy=multi-user.target
EOF

mkdir -p /root/.local/share/code-server/User
cat << EOF > /root/.local/share/code-server/User/settings.json
{
  "workbench.colorTheme": "Default Dark+",
  "workbench.startupEditor": "none",
  "security.workspace.trust.enabled": false,
  "security.workspace.trust.banner": "never",
  "security.workspace.trust.startupPrompt": "never",
  "security.workspace.trust.untrustedFiles": "open",
  "editor.minimap.enabled": false,
  "terraform.experimentalFeatures.validateOnSave": true,
  "terraform.experimentalFeatures.prefillRequiredFields": true,
  "terraform.languageServer.enable": false,
  "[terraform]": {
    "editor.defaultFormatter": "hashicorp.terraform",
    "editor.formatOnSave": true,
    "editor.formatOnSaveMode": "file"
  },
  "[terraform-vars]": {
    "editor.defaultFormatter": "hashicorp.terraform",
    "editor.formatOnSave": true,
    "editor.formatOnSaveMode": "file"
  },
  "files.exclude": {
    "**/.bash*": true,
    "**/.cache": true,
    "**/.config": true,
    "**/.docker": true,
    "**/.gnupg": true,
    "**/.git-credentials": true,
    "**/.gitconfig": true,
    "**/.local": true,
    "**/.profile": true,
    "**/.ssh": true,
    "**/.terraform.d": true,
    "**/.viminfo": true,
    "**/.vimrc": true,
    "**/.vscode": true,
    "**/terraform-github": true,
    "**/terraform-api": true,
    "**/scripts": true,
    "**/snap": true
  },
  "workbench.iconTheme": "material-icon-theme",
  "material-icon-theme.activeIconPack": "react",
  "material-icon-theme.files.associations": {},
  "material-icon-theme.folders.theme": "classic",
  "material-icon-theme.hidesExplorerArrows": true,
  "git.confirmSync": false,
  "git.autofetch": true
}
EOF

systemctl enable code-server
systemctl start code-server

code-server --install-extension hashicorp.terraform



exit 0 




